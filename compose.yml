services: 
  
  #RoomDesigner Api
  roomsdesigner.api:
    image: ghcr.io/aaterekhov/roomsdesigner:latest
    container_name: roomsdesigner-service
    environment:
      "ASPNETCORE_URLS": "http://+:5100"
      ConnectionStrings:Postgres: "Host=roomsdesigner_db;Port=5432;Database=room;UserId=postgres;Password=admin24"
      RmqSettings:Host: "habit-rabbit"
      RmqSettings:VHost: "/"
      RmqSettings:Login: "guest"
      RmqSettings:Password: "guest"
    depends_on:
      - roomsdesigner_db
    ports:
      - "5200:5100"

  #RoomDesigner Db
  roomsdesigner_db:
    image: postgres
    container_name: roomsdesigner_db
    restart: always
    environment:    
      POSTGRES_DB: room
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin24
    ports:
      - 5434:5432
    volumes:
      - 'roomsdesigner_data:/var/lib/postgresql/data'

  #SantaBags Api
  santasbag.webhost:
    build: SantasBag/
    environment:
      "ASPNETCORE_URLS": "http://+:8080"
      "SANTASBAG_DBCONTEXT_CONNECTION_STRING": "Host=sb_postgres;Port=5432;Database=db;UserId=postgres;Password=postgres"
    container_name: santasbag_api
    depends_on:
      - sb_postgres
    ports:
      - "8080:8080"
      
  #SantaBags Db
  sb_postgres:
    container_name: sb_postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  #Bookofhabits Api
  bookofhabits:
    image: ghcr.io/aaterekhov/bookofhabits:latest
    environment:
      "ASPNETCORE_URLS": "http://+:5100"
      ConnectionStrings:Postgres: "Host=habit_db;Port=5432;Database=Habit;UserId=postgres;Password=admin24"      
      RmqSettings:Host: "habit-rabbit"
      RmqSettings:VHost: "/"
      RmqSettings:Login: "guest"
      RmqSettings:Password: "guest"
    container_name: habitsbook-service
    depends_on:
      - habit_db
    ports:
      - "5101:5100"

  #Bookofhabits Db
  habit_db:
    image: postgres
    container_name: habit_db
    restart: always
    environment:    
      POSTGRES_DB: Habit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin24
    ports:
      - 5455:5432
    volumes:
      - 'habitsbook_data:/var/lib/postgresql/data'

  #Broadcaster Api
  habits-broadcaster-api:
    image: ghcr.io/aaterekhov/broadcaster:latest
    container_name: 'habits-broadcaster-api'
    restart: always 
    ports:
      - "5010:5010"
    depends_on:
      - broadcaster-mongodb
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5010
      MongoSettings:Connection: "mongodb://root:example@broadcaster-mongodb:27017/broadcasterDb?authSource=admin"
      MongoSettings:DatabaseName: "broadcasterDb"      
      RmqSettings:Host: "habit-rabbit"
      RmqSettings:VHost: "/"
      RmqSettings:Login: "guest"
      RmqSettings:Password: "guest"

  #Broadcaster Db
  broadcaster-mongodb:
    image: "mongo:latest"
    container_name: 'broadcaster-mongodb'
    restart: always 
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  habit-rabbit:
    image: rabbitmq:3-management
    container_name: 'habit-rabbit'
    restart: always
    hostname: rabbitmqhost    
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    
     # Magazine Api
  magazine_api:
    build: Magazine/
    container_name: magazineService
    depends_on:
      - redis
      - magazinepostgresdb
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5100
      ConnectionStrings:Redis: redis:6379,ssl=False,abortConnect=False
      magazine_connection_db_string: "Host=magazinePostgresdb;Port=5432;Database=magazinedb;Username=postgres;Password=1234;Include Error Detail=true"
    ports:
      - 5200:5100
    networks:
      - caching-network

  # Magazine Db
  magazinepostgresdb:
    container_name: magazinepostgresdb
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: magazinedb
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres -d magazinedb -c 'SELECT 1' || exit 1"]
    volumes:
      - magazine_data:/var/lib/postgresql/data
    networks:
      - caching-network

  # Diary Api
  diary_api:
    build: Diary/
    container_name: diaryService
    depends_on:
      - redis
      - diarypostgresdb
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings:Redis: redis:6379,ssl=False,abortConnect=False
      diary_connection_db_string: "Host=diarypostgresdb;Port=5432;Database=diarydb;Username=postgres;Password=1234;Include Error Detail=true"
    ports:
      - "8080:8080"
    networks:
      - caching-network

  # Diary Db
  diarypostgresdb:
    container_name: diarypostgresdb
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: diarydb
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres -d diarydb -c 'SELECT 1' || exit 1"]
    volumes:
      - diary_data:/var/lib/postgresql/data
    networks:
      - caching-network

  # RabbitMQ
  magazine_diary_rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    restart: always
    hostname: rabbitmqhost
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - caching-network

  # Redis
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - caching-network


volumes:
  rabbitmq_data:
  roomsdesigner_data:
  postgres-data:
  habitsbook_data:
  mongo_data:
  magazine_data:
  diary_data:
  magazine_diary_rabbit_data: